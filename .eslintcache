[{"C:\\Test\\social-media\\src\\index.tsx":"1","C:\\Test\\social-media\\src\\reportWebVitals.ts":"2","C:\\Test\\social-media\\src\\App.tsx":"3","C:\\Test\\social-media\\src\\components\\Navbar.tsx":"4","C:\\Test\\social-media\\src\\components\\Feed.tsx":"5","C:\\Test\\social-media\\src\\app\\store.tsx":"6","C:\\Test\\social-media\\src\\features\\articles\\articlesSlice.tsx":"7","C:\\Test\\social-media\\src\\components\\Tags.tsx":"8","C:\\Test\\social-media\\src\\features\\userSlice.tsx":"9","C:\\Test\\social-media\\src\\features\\usersSlice.tsx":"10","C:\\Test\\social-media\\src\\components\\FeedCard.tsx":"11","C:\\Test\\social-media\\src\\pages\\SignUpPage.tsx":"12","C:\\Test\\social-media\\src\\pages\\SignInPage.tsx":"13","C:\\Test\\social-media\\src\\pages\\HomePage.tsx":"14","C:\\Test\\social-media\\src\\pages\\ArticlePage.tsx":"15","C:\\Test\\social-media\\src\\components\\UserInfo.tsx":"16","C:\\Test\\social-media\\src\\pages\\PostArticlePage.tsx":"17","C:\\Test\\social-media\\src\\server\\models\\index.js":"18","C:\\Test\\social-media\\src\\server\\models\\role.model.js":"19","C:\\Test\\social-media\\src\\server\\models\\tag.model.js":"20","C:\\Test\\social-media\\src\\server\\models\\article.model.js":"21","C:\\Test\\social-media\\src\\server\\models\\user.model.js":"22","C:\\Test\\social-media\\src\\features\\types.ts":"23","C:\\Test\\social-media\\src\\pages\\UserSettingsPage.tsx":"24","C:\\Test\\social-media\\src\\components\\styled\\Button.tsx":"25","C:\\Test\\social-media\\src\\components\\styled\\Input.tsx":"26","C:\\Test\\social-media\\src\\components\\styled\\TextArea.tsx":"27","C:\\Test\\social-media\\src\\components\\styled\\Content.tsx":"28","C:\\Test\\social-media\\src\\components\\styled\\FullWidthContent.tsx":"29","C:\\Test\\social-media\\src\\pages\\UserPage.tsx":"30"},{"size":1139,"mtime":1607371919289,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":2539,"mtime":1607365428043,"results":"34","hashOfConfig":"32"},{"size":2561,"mtime":1607366016543,"results":"35","hashOfConfig":"32"},{"size":3213,"mtime":1607327455939,"results":"36","hashOfConfig":"32"},{"size":593,"mtime":1607244596375,"results":"37","hashOfConfig":"32"},{"size":2619,"mtime":1607371007595,"results":"38","hashOfConfig":"32"},{"size":1135,"mtime":1607201985040,"results":"39","hashOfConfig":"32"},{"size":3932,"mtime":1607371934099,"results":"40","hashOfConfig":"32"},{"size":2010,"mtime":1607368397285,"results":"41","hashOfConfig":"32"},{"size":1796,"mtime":1607324558238,"results":"42","hashOfConfig":"32"},{"size":2651,"mtime":1607348547839,"results":"43","hashOfConfig":"32"},{"size":2007,"mtime":1607348571094,"results":"44","hashOfConfig":"32"},{"size":830,"mtime":1606935385018,"results":"45","hashOfConfig":"32"},{"size":2402,"mtime":1607351333616,"results":"46","hashOfConfig":"32"},{"size":2050,"mtime":1607366105241,"results":"47","hashOfConfig":"32"},{"size":2707,"mtime":1607348824236,"results":"48","hashOfConfig":"32"},{"size":338,"mtime":1607109381101,"results":"49","hashOfConfig":"32"},{"size":159,"mtime":1607011299514,"results":"50","hashOfConfig":"32"},{"size":254,"mtime":1607107589795,"results":"51","hashOfConfig":"32"},{"size":557,"mtime":1607325608964,"results":"52","hashOfConfig":"32"},{"size":1172,"mtime":1607199367477,"results":"53","hashOfConfig":"32"},{"size":2130,"mtime":1607335925311,"results":"54","hashOfConfig":"32"},{"size":3140,"mtime":1607355809759,"results":"55","hashOfConfig":"32"},{"size":755,"mtime":1607349413085,"results":"56","hashOfConfig":"32"},{"size":317,"mtime":1607351491846,"results":"57","hashOfConfig":"32"},{"size":136,"mtime":1607348782221,"results":"58","hashOfConfig":"32"},{"size":139,"mtime":1607351714827,"results":"59","hashOfConfig":"32"},{"size":551,"mtime":1607349914486,"results":"60","hashOfConfig":"32"},{"size":2430,"mtime":1607369628374,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lrje9g",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},"C:\\Test\\social-media\\src\\index.tsx",[],"C:\\Test\\social-media\\src\\reportWebVitals.ts",[],["134","135"],"C:\\Test\\social-media\\src\\App.tsx",["136"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { Navbar } from './components/Navbar'\nimport { useSelector } from 'react-redux';\nimport { RootState, useAppDispatch } from './app/store';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { SignUpPage } from './pages/SignUpPage';\nimport { SignInPage } from './pages/SignInPage';\nimport { ArticlePage } from './pages/ArticlePage';\nimport { PostArticlePage } from './pages/PostArticlePage';\nimport { fetchUsers } from './features/usersSlice';\nimport { fetchArticles } from './features/articles/articlesSlice';\nimport { USER_STATUS } from './features/types';\nimport { UserSettingsPage } from './pages/UserSettingsPage';\nimport { Content } from './components/styled/Content';\nimport { Banner, FullWidthContent } from './components/styled/FullWidthContent';\nimport { UserPage } from './pages/UserPage';\n\n\nconst AppContainer = styled.div`\n`\n\nconst MainSection = styled(Content)`\n\n    display: flex;\n    flex-flow: row nowrap;\n\n    & > div:first-child:not(:only-child) {\n        margin-right: 40px\n    }\n\n    & > div:only-child {\n        \n    }\n`\n\n\nexport const App: React.FC = () => {\n\n  const userStatus = useSelector<RootState, USER_STATUS>(state => state.user.status);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n    dispatch(fetchArticles());\n  }, [dispatch])\n\n  return (\n    <AppContainer>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          {userStatus === 'guest' && \n          <Banner>\n            <h1>I'm poster</h1>\n            <p>A place to share your knowledge.</p>\n          </Banner>\n          }\n          <MainSection>\n            <HomePage />\n          </MainSection>\n        </Route>\n        <Route exact path=\"/signup\">\n          <Content>\n            <SignUpPage />\n          </Content>\n        </Route>\n        <Route exact path=\"/signin\">\n          <Content>\n            <SignInPage />\n          </Content>\n        </Route>\n        <Route path=\"/article/:articleId\">\n          <ArticlePage />\n        </Route>\n        <Route exact path=\"/create-article\">\n          <Content>\n            <PostArticlePage />\n          </Content>\n        </Route>\n        <Route exact path=\"/user/:userId\">\n          <UserPage />\n        </Route>\n        <Route exact path=\"/settings\">\n          <Content>\n            <UserSettingsPage />\n          </Content>\n        </Route>\n      </Switch>\n    </AppContainer>\n  );\n}","C:\\Test\\social-media\\src\\components\\Navbar.tsx",[],"C:\\Test\\social-media\\src\\components\\Feed.tsx",["137","138"],"import React, { useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { RootState } from '../app/store';\r\nimport { getArticles } from '../features/articles/articlesSlice'\r\nimport { ArticlesState, FETCH_STATUS, Article, UserState, USER_STATUS } from '../features/types';\r\nimport { tag } from '../server/models';\r\nimport { FeedCard } from './FeedCard';\r\n\r\nconst FeedContainer = styled.div`\r\n`\r\nconst FeedTags = styled.div`\r\n    border-bottom: 1px solid grey;\r\n    height: 30px;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n`\r\n\r\nconst TagLink = styled.a<{selected?: boolean}>`\r\n    padding: 0 20px;\r\n    &:hover {\r\n        color: black;\r\n        cursor: pointer;\r\n    }\r\n    ${props => props.selected && `\r\n    color: ${props.theme.primaryColor};\r\n    border-bottom: 1px solid ${props.theme.primaryColor};\r\n    `}\r\n`\r\ninterface FeedProps {\r\n    selectedTag?: string,\r\n    removeTag: () => void\r\n}\r\n\r\nexport const Feed: React.FC<FeedProps> = ({ selectedTag, removeTag }) => {\r\n    \r\n    const articlesObject = useSelector<RootState, ArticlesState>(getArticles());\r\n    const userObject = useSelector<RootState, UserState>(state => state.user);\r\n\r\n    const [articlesList, setArticlesList] = useState<Article[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (articlesObject.status === FETCH_STATUS.SUCCESS) {\r\n            setArticlesList(articlesObject.articles)\r\n        }\r\n    }, [articlesObject])\r\n\r\n\r\n    const [selectedTab, setSelectedTab] = useState<'global' | 'user' | 'tag'>('global')\r\n\r\n    console.log('Articles when fetch: ', articlesList);\r\n\r\n    useEffect(() => {\r\n        if (selectedTag && articlesObject.status === FETCH_STATUS.SUCCESS) {\r\n            setArticlesList(articlesObject.articles.filter(article => article.tags.includes(selectedTag)))\r\n            setSelectedTab('tag');\r\n        }\r\n    }, [selectedTag])\r\n\r\n    const onGlobalClick = () => {\r\n        removeTag();\r\n        if (articlesObject.status === FETCH_STATUS.SUCCESS) {\r\n            setArticlesList(articlesObject.articles);\r\n        }\r\n        else {\r\n            setArticlesList([]);\r\n        }\r\n        setSelectedTab('global'); \r\n    }\r\n\r\n    const onYourFeedClick = () => {\r\n        removeTag();\r\n        if (articlesObject.status === FETCH_STATUS.SUCCESS && userObject.status !== USER_STATUS.GUEST) {\r\n            setArticlesList(articlesObject.articles.filter(article => article.author.username === userObject.user.username));\r\n        }\r\n        setSelectedTab('user');\r\n    }\r\n\r\n    return (\r\n        <FeedContainer>\r\n            <FeedTags>\r\n                { userObject.status !== USER_STATUS.GUEST && \r\n                <TagLink selected={selectedTab === 'user'} onClick={() => onYourFeedClick()}>Your&nbsp;Feed</TagLink>\r\n                }\r\n                <TagLink selected={selectedTab === 'global'} onClick={() => onGlobalClick()}>Global&nbsp;Feed</TagLink>\r\n                {selectedTag && \r\n                <TagLink selected={selectedTab === 'tag'}>{selectedTag}</TagLink>}\r\n            </FeedTags>\r\n            {articlesList.map(article => \r\n                <FeedCard article={article} />\r\n            )}\r\n        </FeedContainer>\r\n    )\r\n}","C:\\Test\\social-media\\src\\app\\store.tsx",[],"C:\\Test\\social-media\\src\\features\\articles\\articlesSlice.tsx",["139","140"],"C:\\Test\\social-media\\src\\components\\Tags.tsx",["141","142"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { RootState } from '../app/store';\r\n\r\nconst TagsContainer = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n`\r\n\r\nexport const Tag = styled.a<{ outline?: boolean }>`\r\n    font-size: .75em;\r\n    margin: 0 5px 5px 0;\r\n    background-color: ${props => !props.outline && props.theme.primaryColor};\r\n    border: ${props => props.outline && `1px solid ${props.theme.primaryColor}`};\r\n    color: ${props => !props.outline && 'white'};\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst TagsHeader = styled.p`\r\n    margin: 0 0 10px;\r\n`\r\n\r\nconst TagsList = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n`\r\n\r\ninterface TagsProps {\r\n    onTagSelect: (tagName: string) => void,\r\n}\r\n\r\nexport const Tags: React.FC<TagsProps> = ({ onTagSelect }) => {\r\n\r\n    return (\r\n        <TagsContainer>\r\n            <TagsHeader>Popular tags</TagsHeader>\r\n            <TagsList>\r\n                TODO API\r\n            </TagsList>\r\n        </TagsContainer>\r\n    )\r\n}","C:\\Test\\social-media\\src\\features\\userSlice.tsx",["143","144"],"C:\\Test\\social-media\\src\\features\\usersSlice.tsx",[],"C:\\Test\\social-media\\src\\components\\FeedCard.tsx",[],"C:\\Test\\social-media\\src\\pages\\SignUpPage.tsx",["145","146","147","148"],"import { unwrapResult } from '@reduxjs/toolkit'\r\nimport { response } from 'express'\r\nimport React, { useEffect, useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { useAppDispatch } from '../app/store'\r\nimport { Button } from '../components/styled/Button'\r\nimport { Input } from '../components/styled/Input'\r\nimport { signup } from '../features/userSlice'\r\n\r\nexport const FormContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    \r\n\r\n    form {\r\n        display: flex;\r\n        flex-flow: column;\r\n        width: 500px;\r\n        margin: 20px 0;\r\n\r\n        & > * {\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n`\r\n\r\n\r\ninterface SignUpPageProps {\r\n\r\n}\r\n\r\nexport const SignUpPage: React.FC<SignUpPageProps> = () => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const handleInputFocus = () => {\r\n        setErrorMessage(null);\r\n        setSuccessMessage(null);\r\n    }\r\n\r\n    const handleSubmit = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        dispatch(signup({ username, email, password }))\r\n            .then(unwrapResult)\r\n            .then(result => {\r\n                setErrorMessage(null);\r\n                setSuccessMessage(result.message);\r\n            })\r\n            .catch(error => {\r\n                setSuccessMessage(null);\r\n                setErrorMessage(error.message);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign up</h1>\r\n            <p><a>Have an account?</a></p>\r\n            <form>\r\n                <Input type=\"text\" name='username' placeholder='Username' \r\n                    onFocus={handleInputFocus} \r\n                    onChange={e => setUsername(e.target.value)}/>\r\n                <Input type=\"text\" name='email' placeholder='Email' \r\n                    onFocus={handleInputFocus} \r\n                    onChange={e => setEmail(e.target.value)}/>\r\n                <Input type=\"password\" name='password' placeholder='Password' \r\n                    onFocus={handleInputFocus} \r\n                    onChange={e => setPassword(e.target.value)}/>\r\n                {successMessage}\r\n                {errorMessage}\r\n                <Button type=\"submit\" onClick={handleSubmit}>\r\n                    Sign up\r\n                </Button>\r\n            </form>\r\n        </FormContainer>\r\n    )\r\n}","C:\\Test\\social-media\\src\\pages\\SignInPage.tsx",["149"],"import { unwrapResult } from '@reduxjs/toolkit';\r\nimport React, { useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from '../app/store';\r\nimport { Button } from '../components/styled/Button';\r\nimport { Input } from '../components/styled/Input';\r\nimport { signin } from '../features/userSlice';\r\nimport { FormContainer } from './SignUpPage';\r\n\r\ninterface SignInPageProps {\r\n\r\n}\r\n\r\nexport const SignInPage: React.FC<SignInPageProps> = () => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [isError, setIsError] = useState(false);\r\n    const errorMessage = useRef<string>('');\r\n\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    \r\n\r\n    const handleSubmit = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        dispatch(signin({ username, password }))\r\n            .then(unwrapResult)\r\n            .then(result => {\r\n                console.log(result);\r\n                history.push('/');\r\n            })\r\n            .catch(error => {\r\n                errorMessage.current = error.message;\r\n                setIsError(true);\r\n            })\r\n    }\r\n\r\n    const handleInputFocus = (e: React.SyntheticEvent) => {\r\n        setIsError(false);\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign in</h1>\r\n            <p><a>Need an account?</a></p>\r\n            <form>\r\n                <Input type=\"text\" name='username' placeholder='Username' onFocus={handleInputFocus} onChange={e => setUsername(e.target.value)}/>\r\n                <Input type=\"password\" name='password' placeholder='Password' onFocus={handleInputFocus} onChange={e => setPassword(e.target.value)}/>\r\n                {isError && <p>{errorMessage.current}</p>}\r\n                <Button type=\"submit\" \r\n                    onClick={handleSubmit}>\r\n                    Sign in\r\n                </Button>\r\n            </form>\r\n        </FormContainer>\r\n    )\r\n}","C:\\Test\\social-media\\src\\pages\\HomePage.tsx",[],"C:\\Test\\social-media\\src\\pages\\ArticlePage.tsx",["150"],"import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { UserInfo } from '../components/UserInfo'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../app/store'\r\nimport { Article, FETCH_STATUS } from '../features/types'\r\nimport { Tag } from '../components/Tags'\r\nimport { getArticleById } from '../features/articles/articlesSlice'\r\nimport { Button } from '../components/styled/Button'\r\nimport { FullWidthContent, ArticleHeader } from '../components/styled/FullWidthContent'\r\nimport { Content } from '../components/styled/Content'\r\n\r\ninterface ArticlePageProps {\r\n}\r\n\r\nconst ArticlePageContainer = styled.div`\r\n\r\n    .UserInfo {\r\n        display: inline-block;\r\n    }\r\n    \r\n    h1 {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    ${Button} {\r\n        margin: 0 5px;\r\n    }\r\n\r\n    ${Content} > p {\r\n        margin-bottom: 50px;\r\n    }\r\n`\r\n\r\nexport const ArticlePage: React.FC<ArticlePageProps> = () => {\r\n\r\n    const { articleId } = useParams<{ articleId: string }>();\r\n\r\n    const loadingStatus = useSelector<RootState, string>(state => state.articles.status);\r\n    const article = useSelector<RootState, Article | null>(getArticleById(articleId));\r\n\r\n    if (!article) {\r\n        return (\r\n            <ArticleHeader>\r\n                <FullWidthContent>\r\n                    {loadingStatus === FETCH_STATUS.SUCCESS && <h1>No such article</h1>}\r\n                    {loadingStatus === FETCH_STATUS.PENDING && <h1>Loading articles</h1>}\r\n                    {loadingStatus === FETCH_STATUS.FAILURE && <h1>Error when fetch</h1>}\r\n                </FullWidthContent>\r\n            </ArticleHeader>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <ArticlePageContainer>\r\n            <ArticleHeader>\r\n                <Content>\r\n                    <h1>{article.title}</h1>\r\n                    <UserInfo article={article} nameColor='white'/>\r\n                    <Button outline size='sm'>Follow {article.author.username}</Button>\r\n                    <Button outline size='sm'>Favorite article</Button>\r\n                </Content>\r\n            </ArticleHeader>\r\n            <Content>\r\n                <p>{article.content}</p>\r\n                {article.tags.map(tag => {\r\n                    return <Tag outline>{tag}</Tag>\r\n                })}\r\n            </Content>\r\n        </ArticlePageContainer>\r\n    )\r\n}","C:\\Test\\social-media\\src\\components\\UserInfo.tsx",[],"C:\\Test\\social-media\\src\\pages\\PostArticlePage.tsx",[],"C:\\Test\\social-media\\src\\server\\models\\index.js",[],["151","152"],"C:\\Test\\social-media\\src\\server\\models\\role.model.js",[],"C:\\Test\\social-media\\src\\server\\models\\tag.model.js",[],"C:\\Test\\social-media\\src\\server\\models\\article.model.js",[],"C:\\Test\\social-media\\src\\server\\models\\user.model.js",["153","154"],"const mongoose = require(\"mongoose\");\r\nconst { user } = require(\".\");\r\nconst Role = require(\"./role.model\");\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  username: String,\r\n  email: String,\r\n  password: String,\r\n  avatar: {\r\n    type: String,\r\n    default: 'https://fiverr-res.cloudinary.com/images/q_auto,f_auto/gigs/123907218/original/fccdc48c5d7e319ae32d19898d11182290c3021d/create-cyberpunk-and-superhero-style-illustration-for-you.jpg'\r\n  },\r\n  about: {\r\n    type: String,\r\n    default: function() {\r\n      return this.username + \"'s about information.\"\r\n    }\r\n  },\r\n  followers: [\r\n    {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\"\r\n    }\r\n  ],\r\n  following: [\r\n    {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\"\r\n    }\r\n  ],\r\n  articles: [\r\n    {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Article\"\r\n    }\r\n  ],\r\n  favoriteArticles: [\r\n    {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Article\"\r\n    }\r\n  ],\r\n  roles: [\r\n    {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Role\",\r\n    }\r\n  ]\r\n})\r\n\r\nconst User = mongoose.model(\r\n  \"User\",\r\n  userSchema\r\n);\r\n\r\nmodule.exports = User;","C:\\Test\\social-media\\src\\features\\types.ts",[],"C:\\Test\\social-media\\src\\pages\\UserSettingsPage.tsx",["155"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { UserUpdateRequest, USER_STATUS } from '../features/types';\r\nimport { getUser, updateUser } from '../features/userSlice';\r\nimport { FormContainer } from './SignUpPage';\r\nimport { useAppDispatch } from '../app/store';\r\nimport { Button } from '../components/styled/Button';\r\nimport { Input } from '../components/styled/Input';\r\nimport { TextArea } from '../components/styled/TextArea';\r\nimport { FullWidthContent } from '../components/styled/FullWidthContent';\r\n\r\ninterface UserSettingsPageProps {\r\n\r\n}\r\n\r\nconst UserSettingsPageContainer = styled.div`\r\n\r\n`\r\n\r\nexport const UserSettingsPage: React.FC<UserSettingsPageProps> = () => {\r\n\r\n    const userObject = useSelector(getUser());\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [about, setAbout] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (userObject.status !== USER_STATUS.GUEST) {\r\n            setEmail(userObject.user.email);\r\n            setAvatar(userObject.user.avatar)\r\n            setAbout(userObject.user.about)\r\n        }\r\n    }, [userObject])\r\n\r\n    if (userObject.status === USER_STATUS.GUEST) {\r\n        return (\r\n            <>\r\n                You have to sign in to be able to view this page!\r\n            </>\r\n        )\r\n    }\r\n\r\n    const handleSubmit = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        const updateInfo: UserUpdateRequest = {};\r\n        if (email !== '' && email !== userObject.user.email) {\r\n            updateInfo.email = email;\r\n        }\r\n        if (avatar !== '' && avatar !== userObject.user.avatar) {\r\n            updateInfo.avatar = avatar;\r\n        }\r\n        if (about !== '' && about !== userObject.user.about) {\r\n            updateInfo.about = about;\r\n        }\r\n        if (password !== '') {\r\n            updateInfo.password = password;\r\n        }\r\n        dispatch(updateUser(updateInfo));\r\n    }\r\n\r\n    return (\r\n        <UserSettingsPageContainer>\r\n            <FormContainer>\r\n                <h1>Your settings</h1> \r\n                <form>\r\n                    <p>Username: {userObject.user.username}</p>\r\n                    <Input type=\"text\" name=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                    <Input type=\"text\" name=\"avatar\" placeholder=\"Avatar url\" value={avatar} onChange={e => setAvatar(e.target.value)}/>\r\n                    <TextArea as=\"textarea\" name=\"about\" placeholder=\"Your 'about' information\" value={about} onChange={(e: React.ChangeEvent) => setAbout((e.target as HTMLTextAreaElement).value)}/>\r\n                    <Input type=\"passoword\" name=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                    <Button type=\"submit\" onClick={handleSubmit}>Commit changes</Button>\r\n                </form>\r\n            </FormContainer>\r\n        </UserSettingsPageContainer>\r\n    )\r\n}","C:\\Test\\social-media\\src\\components\\styled\\Button.tsx",["156"],"import styled, { css } from \"styled-components\"\r\n\r\n\r\nexport const Button = styled.button<{ size?: 'sm' | 'md' | 'lg', outline?: boolean }>`\r\n\r\n    background-color: ${props => props.outline ? 'transparent' : props.theme.primaryColor};\r\n    border: 1px solid ${props => props.outline ? 'white' : props.theme.primaryColor};\r\n    color: white;\r\n    font-family: inherit;\r\n    outline: none;\r\n    border-radius: 5px;\r\n\r\n    ${props => props.size === 'sm' && `font-size: .75em; height: 2em;`}\r\n    ${props => props.size === 'md' && `font-size: 1em; height: 2.5em;`}\r\n    ${props => props.size === 'lg' && `font-size: 1.25em; height: 3em;`}\r\n\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nButton.defaultProps = {\r\n    size: 'md',\r\n    outline: false\r\n}","C:\\Test\\social-media\\src\\components\\styled\\Input.tsx",[],"C:\\Test\\social-media\\src\\components\\styled\\TextArea.tsx",[],"C:\\Test\\social-media\\src\\components\\styled\\Content.tsx",[],"C:\\Test\\social-media\\src\\components\\styled\\FullWidthContent.tsx",[],"C:\\Test\\social-media\\src\\pages\\UserPage.tsx",["157","158","159","160","161","162","163"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Feed } from '../components/Feed'\r\n\r\nimport { Button } from '../components/styled/Button'\r\nimport { Content } from '../components/styled/Content'\r\nimport { FullWidthContent } from '../components/styled/FullWidthContent'\r\nimport { FETCH_STATUS, UserPublicInfo, UserState } from '../features/types'\r\nimport { fetchUserPublicInfo, getUserByUsername } from '../features/usersSlice'\r\n\r\ninterface UserPageProps {\r\n}\r\n\r\nconst UserPageContainer = styled.div`\r\n\r\n    ${FullWidthContent} {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 20px;\r\n    }\r\n`\r\n\r\nconst UserAvatar = styled.img`\r\n    width: 150px;\r\n    border-radius: 150px;\r\n`\r\n\r\nexport const UserPage: React.FC<UserPageProps> = () => {\r\n\r\n    const { userId } = useParams<{userId: string}>();\r\n\r\n    const [userObject, setUserObject] = useState<{username: string, avatar: string, about: string} | null>(null);\r\n    const [loadingStatus, setLoadingStatus] = useState<FETCH_STATUS>(FETCH_STATUS.PENDING)\r\n\r\n    useEffect(() => {\r\n        let didCancel = false;\r\n        setLoadingStatus(FETCH_STATUS.PENDING);\r\n        fetchUserPublicInfo(userId)\r\n        .then(res => {\r\n            if (!didCancel) {\r\n                setLoadingStatus(FETCH_STATUS.SUCCESS);\r\n                setUserObject(res);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            if (!didCancel) {\r\n                setLoadingStatus(FETCH_STATUS.FAILURE);\r\n            }\r\n        });\r\n        return () => {didCancel = true};\r\n    }, [])\r\n\r\n\r\n    if (loadingStatus === FETCH_STATUS.PENDING) {\r\n        return <h1>Loading...</h1>\r\n    }\r\n\r\n    if (loadingStatus === FETCH_STATUS.FAILURE) {\r\n        return <h1>Error loading user</h1>\r\n    }\r\n\r\n    if (!userObject) {\r\n        return <h1>No such user</h1>\r\n    }\r\n\r\n    return (\r\n        <UserPageContainer>\r\n            <FullWidthContent>\r\n                <UserAvatar src={userObject.avatar}/>\r\n                <h2>{userObject.username}</h2>\r\n                <p>TODO: Follow</p>\r\n                <p>{userObject.about}</p>\r\n            </FullWidthContent>\r\n            <Content>\r\n                <h3>Feed</h3>\r\n            </Content>\r\n        </UserPageContainer>\r\n    )\r\n}",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":18,"column":18,"nodeType":"170","messageId":"171","endLine":18,"endColumn":34},{"ruleId":"168","severity":1,"message":"172","line":7,"column":10,"nodeType":"170","messageId":"171","endLine":7,"endColumn":13},{"ruleId":"173","severity":1,"message":"174","line":58,"column":8,"nodeType":"175","endLine":58,"endColumn":21,"suggestions":"176"},{"ruleId":"168","severity":1,"message":"177","line":2,"column":18,"nodeType":"170","messageId":"171","endLine":2,"endColumn":31},{"ruleId":"168","severity":1,"message":"178","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":9},{"ruleId":"168","severity":1,"message":"179","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":21},{"ruleId":"168","severity":1,"message":"180","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":19},{"ruleId":"168","severity":1,"message":"181","line":4,"column":62,"nodeType":"170","messageId":"171","endLine":4,"endColumn":75},{"ruleId":"168","severity":1,"message":"182","line":4,"column":77,"nodeType":"170","messageId":"171","endLine":4,"endColumn":91},{"ruleId":"168","severity":1,"message":"183","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":18},{"ruleId":"168","severity":1,"message":"184","line":3,"column":17,"nodeType":"170","messageId":"171","endLine":3,"endColumn":26},{"ruleId":"168","severity":1,"message":"185","line":4,"column":18,"nodeType":"170","messageId":"171","endLine":4,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":67,"column":16,"nodeType":"188","endLine":67,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":47,"column":16,"nodeType":"188","endLine":47,"endColumn":19},{"ruleId":"168","severity":1,"message":"184","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"164","replacedBy":"189"},{"ruleId":"166","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":9,"nodeType":"170","messageId":"171","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"193","line":3,"column":7,"nodeType":"170","messageId":"171","endLine":3,"endColumn":11},{"ruleId":"168","severity":1,"message":"169","line":11,"column":10,"nodeType":"170","messageId":"171","endLine":11,"endColumn":26},{"ruleId":"168","severity":1,"message":"185","line":1,"column":18,"nodeType":"170","messageId":"171","endLine":1,"endColumn":21},{"ruleId":"168","severity":1,"message":"179","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":21},{"ruleId":"168","severity":1,"message":"194","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":14},{"ruleId":"168","severity":1,"message":"195","line":7,"column":10,"nodeType":"170","messageId":"171","endLine":7,"endColumn":16},{"ruleId":"168","severity":1,"message":"196","line":10,"column":24,"nodeType":"170","messageId":"171","endLine":10,"endColumn":38},{"ruleId":"168","severity":1,"message":"197","line":10,"column":40,"nodeType":"170","messageId":"171","endLine":10,"endColumn":49},{"ruleId":"168","severity":1,"message":"198","line":11,"column":31,"nodeType":"170","messageId":"171","endLine":11,"endColumn":48},{"ruleId":"173","severity":1,"message":"199","line":55,"column":8,"nodeType":"175","endLine":55,"endColumn":10,"suggestions":"200"},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"@typescript-eslint/no-unused-vars","'FullWidthContent' is defined but never used.","Identifier","unusedVar","'tag' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'articlesObject.articles' and 'articlesObject.status'. Either include them or remove the dependency array.","ArrayExpression",["203"],"'AxiosResponse' is defined but never used.","'e' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'UserUserState' is defined but never used.","'UserAdminState' is defined but never used.","'response' is defined but never used.","'useEffect' is defined but never used.","'css' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["201"],["202"],"no-unused-vars","'user' is assigned a value but never used.","'Role' is assigned a value but never used.","'Feed' is defined but never used.","'Button' is defined but never used.","'UserPublicInfo' is defined but never used.","'UserState' is defined but never used.","'getUserByUsername' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [articlesObject.articles, articlesObject.status, selectedTag]",{"range":"209","text":"210"},"Update the dependencies array to be: [userId]",{"range":"211","text":"212"},[1889,1902],"[articlesObject.articles, articlesObject.status, selectedTag]",[1743,1745],"[userId]"]